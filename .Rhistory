}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
View(pp_obs)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
View(pp_ssp245)
View(pp_ssp585)
pp_obs$mes <- factor(month(pp_obs$Fechas, label = TRUE), levels = month.name)
library(lubridate)
pp_obs$mes <- factor(month(pp_obs$Fechas, label = TRUE), levels = month.name)
View(pp_obs)
View(pp_obs)
pp_obs$mes <- month(pp_obs$Fechas)
View(pp_obs)
pp_obs_prom_mens <- pp_obs %>%
group_by(mes) %>%
summarize(pp_mean_mon = mean('Cauquenes', na.rm = TRUE))
View(pp_obs_prom_mens)
pp_obs_prom_mens <- pp_obs %>%
group_by(mes) %>%
summarize(pp_mean_mon = mean(Cauquenes, na.rm = TRUE))
View(pp_obs_prom_mens)
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
pp_obs_prom_mens <- pp_obs %>%
group_by(month(pp_obs$Fechas)) %>%
summarize(pp_mean_mon = mean(Cauquenes, na.rm = TRUE))
View(pp_obs)
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
pp_obs$mes <- month(pp_obs$Fechas)
pp_obs_prom_mens <- pp_obs %>%
group_by(mes) %>%
summarize(pp_mean_mon = mean(Cauquenes, na.rm = TRUE))
View(pp_obs_prom_mens)
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
View(pp_obs)
pp_obs_prom_mens <- pp_obs %>%
group_by(month(pp_obs$Fechas)) %>%
summarize(pp_mean_mon = mean(Cauquenes, na.rm = TRUE))
View(pp_obs_prom_mens)
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
# Ocupamos la funcion filtrado para filtrar para las fechas de interes:
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
pp_obs_prom_mens <- pp_obs %>%
group_by(month(pp_obs$Fechas)) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
View(pp_obs_prom_mens)
View(pp_ssp245)
pp_ssp245_prom_mens <- pp_ssp245 %>%
group_by(month(pp_ssp245$V1)) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
View(pp_ssp245_prom_mens)
View(pp_ssp245_prom_mens)
View(pp_ssp245_prom_mens)
colnames(pp_ssp245_prom_mens)
View(pp_obs)
View(pp_ssp245)
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a eliminar la primera columna de los df de proyecciones ssp:
pp_ssp245 <- pp_ssp245[,-1]
pp_ssp585 <- pp_ssp585[,-1]
View(pp_ssp245)
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
# Ocupamos la funcion filtrado para filtrar para las fechas de interes:
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
pp_obs_prom_mens <- pp_obs %>%
group_by(month(pp_obs$Fechas)) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
View(pp_obs_prom_mens)
pp_ssp245_prom_mens <- pp_ssp245 %>%
group_by(month(pp_ssp245$V1)) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
View(pp_ssp245_prom_mens)
# Se borran todas las variables y figuras.
rm(list=ls())
graphics.off()
# Carga de paquetes:
library(openxlsx)
library(readxl)
library(dplyr)
library(lubridate)
# Se fija el directorio de trabajo:
setwd("C:/Users/Usuario/Codigos_R/downscaling")
# Se identifica nombre de la carpeta a utilizar:
carpeta <- "archivos"
ruta_archivos <- paste0(getwd(),"/",carpeta)
# 1) Funcion para cargar informacion de distintos archivos a dataframes:
cargar_archivos <- function(archivos) {
# Lista para almacenar los dataframes:
dataframes <- list()
# Itera sobre cada archivo y cargalo en un dataframe
for (i in seq_along(archivos)) {
df_name <- paste0("df_", i) # Crea un nombre unico para cada dataframe
dataframes[[df_name]] <- read_excel(archivos[i]) # Carga el archivo en lista para almacenar dataframes.
}
return(dataframes)
}
# 2) Funcion para convertir a formato fecha los datos de una columna en especifico:
convertir_a_fecha <- function(df, columna, start_date, end_date, formato = "%Y-%m-%d") {
# Creamos un vector de fechas:
fechas <- seq(from = as.Date(start_date), to = as.Date(end_date),
by = 'month')
# Reemplazamos este vector en la columna correspondiente
df[[columna]] <- fechas
return(df)
}
# 3) Funcion para filtrar el df ingresado a las fechas que nos interesan:
filtrado <- function(df, column, start_date, end_date) {
df <- df[df[[column]] >= start_date & df[[column]] <= end_date, ]
return(df)
}
# 4) Funcion para obtener los promedios mensuales de un dataframe:
# Esta funcion la podrías acomodar para que calcule no solo mean, sino que sum,
# o alguna otra funcion.
mean_mon <- function(df,column) {
df_mean_mon <- df %>%
group_by(month(df[[column]])) %>%
summarize(across(where(is.numeric), mean, na.rm = TRUE))
}
# Este codigo va a arrojar una lista con la ruta completa, desde C:/User/Usuario ...
archivos <- list.files(ruta_archivos, pattern ="\\.xlsx$", full.names = TRUE)
dataframes <- cargar_archivos(archivos)
# Accede a los dataframes:
pp_ssp245 <- dataframes$df_1
pp_ssp585 <- dataframes$df_2
pp_obs <- dataframes$df_3
# Se va a eliminar la primera columna de los df de proyecciones ssp:
pp_ssp245 <- pp_ssp245[,-1]
pp_ssp585 <- pp_ssp585[,-1]
# Se va a cambiar formato de fechas de pp_obs, para trabajar mejor:
pp_obs$Fechas <- as.Date(pp_obs$Fechas)
# Los df de los escenarios ssp no tienen reconocidas las fechas como formato fechas
# Se va a solucionar esto:
start_date <- '1850-01-01'
end_date <- '2100-12-01'
pp_ssp245 <- convertir_a_fecha(pp_ssp245, 'V1', start_date, end_date)
pp_ssp585 <- convertir_a_fecha(pp_ssp585, 'V1', start_date, end_date)
# Definimos las fechas de inicio y fin de los periodos historico y futuro.
start_hist <- '1979-01-01'
end_hist <- '2014-12-01'
start_fut <- '2065-01-01'
end_fut <- '2100-12-01'
# Ocupamos la funcion filtrado para filtrar para las fechas de interes:
pp_obs <- filtrado(pp_obs, 'Fechas', start_hist, end_hist)
pp_ssp245 <- filtrado(pp_ssp245, 'V1', start_fut, end_fut)
pp_ssp585 <- filtrado(pp_ssp585, 'V1', start_fut, end_fut)
View(pp_obs)
pp_obs_prom_mens <- mean_mon(pp_obs, 'Fechas')
View(pp_obs_prom_mens)
pp_ssp245_prom_mens <- mean_mon(pp_ssp245, 'Fechas')
View(pp_ssp245)
pp_ssp245_prom_mens <- mean_mon(pp_ssp245, 'V1')
View(pp_ssp245_prom_mens)
